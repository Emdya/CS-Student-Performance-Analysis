# -*- coding: utf-8 -*-
"""CS_Student_Performance_EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Vxbjm-krZXwQMEUwdzbE3lLO3ziRG0jb
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns



#Loading Dataset
df = pd.read_csv('/content/CS Student Strength.csv')


#Styling
sns.set(style='whitegrid')
plt.rcParams["figure.figsize"]=(10,6)


#Average Grade-Point Average per CS-related course taken:
mean_scores = df.drop(columns=['Total Problems Solved']).mean().sort_values(ascending=False)



plt.figure()
colors = sns.color_palette('viridis',len(mean_scores))
sns.barplot(x = mean_scores.values, y = mean_scores.index, palette = colors)
plt.title('Average GPA Per Course')
plt.xlabel('Average GPA')
plt.ylabel('Course')
plt.tight_layout()
plt.show()




#Box Plot Specifically for Core CS Topics
core_subjects = [
    'Structured Programming','OOP','Data Structure', 'Algorithm', 'Operating Systems', 'Artificial Intelligence', 'Machine Learning','Compiler Design'
]
plt.figure()
sns.boxplot(data=df[core_subjects],orient='h',palette='Set2')
plt.title('GPA Distribution Per Core CS Subject')
plt.xlabel('GPA')
plt.ylabel('Subject')
plt.tight_layout()
plt.show()




#3 Scatter Plots: Total Problems Solved vs. Key Subjects
key_subjects = ['OOP','Algorithm','Artificial Intelligence']
for subject in key_subjects:
  plt.figure()
  sns.scatterplot(
    data = df,
    x = subject,
    y = 'Total Problems Solved',
    hue = 'Total Problems Solved',
    palette = 'cool',
    size = 'Total Problems Solved',
    sizes = (20,200),
    legend = False
  )
plt.title(f"Total Problems Solved vs {subject}")
plt.xlabel(f"{subject} GPA")
plt.ylabel("Total Problems Solved")
plt.tight_layout()
plt.show()



#Correlation HeatMap
plt.figure(figsize=(16, 10))
corr_matrix = df.corr(numeric_only=True)
sns.heatmap(corr_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Correlation Heatmap of All Subjects and Total Problems Solved")
plt.tight_layout()
plt.show()

